spring:
  application:
    # UNIQUE NAME OF THIS MICROSERVICE
    name: airport-bookings-service
  # ANSI CONSOLE OUTPUT (COLOR LOGS WILL BE DISPLAYED)
  output:
    ansi:
      enabled: ALWAYS
  # DATABASE CREDENTIALS
  datasource:
    url: 'jdbc:mysql://mysql:3306/airportdb'
    username: airportuser
    password: airportpass
  # SEND MAIL PROPERTIES
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          starttls:
            enable: true
  # ZIPKIN SERVER URL
  zipkin:
    base-url: 'http://zipkin:9411'

server:
  # SERVER PORT OF THIS MICROSERVICE - MUST MATCH DOCKER COMPOSE
  port: 8083

# EUREKA SERVER URL - FIXED PROPERTY STRUCTURE
eureka:
  client:
    service-url:  # Changed from 'service.url' to 'service-url'
      defaultZone: 'http://eureka-server:8761/eureka'
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: airport-bookings-service
    instance-id: ${spring.application.name}:${server.port}

# SWAGGER-UI CUSTOM PATH
springdoc:
  swagger-ui:
    path: /swagger-ui.html

# ACTUATOR WEB ENDPOINTS EXPOSURE
management:
  endpoints:
    web:
      exposure:
        # EXPOSE ALL THE ACTUATOR WEB ENDPOINTS IF SECURITY IS NOT YOUR CONCERN!
        include: "*"
  # GET DETAIL INFORMATION OF ACTUATOR HEALTH ENDPOINT
  endpoint:
    health:
      show-details: always

# AIRPORT-FLIGHT-SERVICE URL
airport:
  flight:
    service:
      url: 'http://airport-flight-service:8082'

# DEBUG LOGGING
logging:
  level:
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG